apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-sample-svc2
  annotations:
      image.openshift.io/triggers: >-
        [{"from":{"kind":"ImageStreamTag","name":"golang-sample-svc2:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"golang-sample-svc2\")].image"}]
  labels:
    app: golang-sample-svc2
    app.kubernetes.io/component: golang-sample-svc2
    app.kubernetes.io/instance: golang-sample-svc2
    app.kubernetes.io/name: golang-sample-svc2
    app.kubernetes.io/part-of: golang-sample
spec:
  replicas: 1
  selector:
    matchLabels:
      app: golang-sample-svc2
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: golang-sample-svc2
        deploymentconfig: golang-sample-svc2
    spec:
      containers:
        - name: golang-sample-svc2
          env:
            - name: SERVICE3_URL
              value: 'http://golang-sample-svc3:8080'
          image: image-registry.openshift-image-registry.svc:5000/a-goex/golang-sample-svc2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
